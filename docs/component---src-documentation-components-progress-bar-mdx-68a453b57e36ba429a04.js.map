{"version":3,"sources":["webpack:///../src/documentation/components/ProgressBar.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","of","ProgressBar","__position","__code","__scope","Playground","Props","Component","Button","value","initialState","setState","state","max","onClick","newValue","isMDXComponent"],"mappings":"gRASaA,G,UAAe,S,8NAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,QAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,eADR,eAGA,uBAAK,gCAAMC,WAAW,OAAU,CAC5B,UAAa,wBADZ,yCAIL,6EACA,iBAAQ,CACN,GAAM,cADR,cAGA,sBACE,kBAAIA,WAAW,MAAf,6CAAkE,YAAC,IAAD,CAAOC,GAAIC,IAAaH,QAAQ,YAEpG,iBAAQ,CACN,GAAM,eADR,eAGA,YAAC,IAAD,CAAYI,WAAY,EAAGC,OAAQ,6BAA8BC,SAAO,GACtEP,QACAH,kBACAW,eACAC,UACAC,cACAN,gBACAO,YAPsE,gBAQtEd,IARsE,EAStEH,eATsE,GAUrEO,QAAQ,cACb,YAAC,IAAD,CAAaW,MAAO,GAAIX,QAAQ,iBAE9B,iBAAQ,CACN,GAAM,uBADR,uBAGA,YAAC,IAAD,CAAYI,WAAY,EAAGC,OAAQ,+ZAAgaC,SAAO,GACxcP,QACAH,kBACAW,eACAC,UACAC,cACAN,gBACAO,YAPwc,gBAQxcd,IARwc,EASxcH,eATwc,GAUvcO,QAAQ,cACb,YAAC,IAAD,CAAWY,aAAc,CACnBD,MAAO,GACNX,QAAQ,cACZ,gBACKa,EADL,EACKA,SACAC,EAFL,EAEKA,MAFL,OAGS,gCACN,YAAC,IAAD,CAAaH,MAAOG,EAAMH,MAAOI,IAAK,GAAIf,QAAQ,gBAClD,YAAC,IAAD,CAAQgB,QAAS,WACb,IAAIC,EAAWH,EAAMH,MAAQ,EAEzBM,GAAY,KACdA,EAAW,GAGbJ,EAAS,CACPF,MAAOM,KAERjB,QAAQ,UAVb,wB,4NAoBRH,EAAWqB,gBAAiB","file":"component---src-documentation-components-progress-bar-mdx-68a453b57e36ba429a04.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/136467364/Desktop/work/mfcl/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport Component from 'react-component-component';\nimport { ProgressBar, Button } from '../../lib';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"progressbar\"\n    }}>{`ProgressBar`}</h1>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import { ProgressBar } from 'mfcl'\n`}</code></pre>\n    <p>{`Loaders help the user feel like things are happening`}</p>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Pass down any props to the ProgressBar Div`}<Props of={ProgressBar} mdxType=\"Props\" /></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <Playground __position={0} __code={'<ProgressBar value={32} />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Component,\n      ProgressBar,\n      Button,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <ProgressBar value={32} mdxType=\"ProgressBar\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"interactive-example\"\n    }}>{`Interactive Example`}</h2>\n    <Playground __position={1} __code={'<Component initialState={{ value: 1 }}>\\n  {({ setState, state }) => (\\n    <>\\n      <ProgressBar value={state.value} max={15} />\\n      <Button\\n        onClick={() => {\\n          let newValue = state.value + 1\\n          if (newValue >= 16) {\\n            newValue = 0\\n          }\\n          setState({ value: newValue })\\n        }}\\n      >\\n        Increment\\n      </Button>\\n    </>\\n  )}\\n</Component>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Component,\n      ProgressBar,\n      Button,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Component initialState={{\n        value: 1\n      }} mdxType=\"Component\">\n    {({\n          setState,\n          state\n        }) => <>\n        <ProgressBar value={state.value} max={15} mdxType=\"ProgressBar\" />\n        <Button onClick={() => {\n            let newValue = state.value + 1;\n\n            if (newValue >= 16) {\n              newValue = 0;\n            }\n\n            setState({\n              value: newValue\n            });\n          }} mdxType=\"Button\">\n          Increment\n        </Button>\n      </>}\n  </Component>\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}