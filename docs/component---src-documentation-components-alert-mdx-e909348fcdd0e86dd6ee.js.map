{"version":3,"sources":["webpack:///../src/documentation/components/Alert.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","of","Alert","__position","__code","__scope","Playground","Props","Component","Button","color","style","width","initialState","isOpen1","isOpen2","isOpen3","setState","state","isOpen","onClose","collapse","onClick","isMDXComponent"],"mappings":"+QASaA,G,UAAe,S,wNAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,QAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,SADR,SAGA,uBAAK,gCAAMC,WAAW,OAAU,CAC5B,UAAa,wBADZ,oCAIL,uFACA,iBAAQ,CACN,GAAM,cADR,cAGA,YAAC,IAAD,CAAOC,GAAIC,IAAOH,QAAQ,UAC1B,iBAAQ,CACN,GAAM,UADR,UAGA,sBACE,kBAAIC,WAAW,MAAf,oDAEF,YAAC,IAAD,CAAYG,WAAY,EAAGC,OAAQ,yGAA4GC,SAAO,GACpJP,QACAH,kBACAW,eACAC,UACAC,cACAN,UACAO,YAPoJ,gBAQpJd,IARoJ,EASpJH,eAToJ,GAUnJO,QAAQ,cACb,YAAC,IAAD,CAAOW,MAAM,QAAQC,MAAO,CACtBC,MAAO,SACNb,QAAQ,SAFf,2CAIE,iBAAQ,CACN,GAAM,oBADR,oBAGA,sBACE,kBAAIC,WAAW,MAAf,sEACA,kBAAIA,WAAW,MAAf,sFAEF,YAAC,IAAD,CAAYG,WAAY,EAAGC,OAAQ,g+BAAu+BC,SAAO,GAC/gCP,QACAH,kBACAW,eACAC,UACAC,cACAN,UACAO,YAP+gC,gBAQ/gCd,IAR+gC,EAS/gCH,eAT+gC,GAU9gCO,QAAQ,cACb,YAAC,IAAD,CAAWc,aAAc,CACnBC,SAAS,EACTC,SAAS,EACTC,SAAS,GACRjB,QAAQ,cACZ,gBACKkB,EADL,EACKA,SACAC,EAFL,EAEKA,MAFL,OAGS,gCACN,YAAC,IAAD,CAAOR,MAAM,QAAQS,OAAQD,EAAMJ,QAASM,QAAS,kBAAMH,EAAS,CAChEH,SAAS,KACPf,QAAQ,SAFd,uCAKA,YAAC,IAAD,CAAOW,MAAM,QAAQS,OAAQD,EAAMF,QAASI,QAAS,kBAAMH,EAAS,CAChED,SAAS,KACPjB,QAAQ,SAFd,gDAKA,YAAC,IAAD,CAAOW,MAAM,QAAQS,OAAQD,EAAMH,QAASK,QAAS,kBAAMH,EAAS,CAChEF,SAAS,KACPM,UAAU,EAAOtB,QAAQ,SAF/B,mCAKA,YAAC,IAAD,CAAQuB,QAAS,kBAAML,EAAS,CAC5BH,SAAS,EACTC,SAAS,EACTC,SAAS,KACPjB,QAAQ,UAJd,sB,sNAcRH,EAAW2B,gBAAiB","file":"component---src-documentation-components-alert-mdx-e909348fcdd0e86dd6ee.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/136467364/Desktop/work/mfcl/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport Component from \"react-component-component\";\nimport { Alert, Button } from '../../lib';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"alert\"\n    }}>{`Alert`}</h1>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import { Alert } from 'mfcl';\n`}</code></pre>\n    <p>{`Alerts are to assist communication between the user and the UI`}</p>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={Alert} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"colors\"\n    }}>{`Colors`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`You can pass in anything with the children prop`}</li>\n    </ul>\n    <Playground __position={1} __code={'<Alert color=\\\"error\\\" style={{ width: \\'300px\\' }}>\\n  Error: you are receiving a crazy error\\n</Alert>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Component,\n      Alert,\n      Button,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Alert color=\"error\" style={{\n        width: '300px'\n      }} mdxType=\"Alert\">Error: you are receiving a crazy error</Alert>\n    </Playground>\n    <h2 {...{\n      \"id\": \"controlled-alert\"\n    }}>{`Controlled Alert`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Use the collapse or fade prop (or both!) for a smoother transition`}</li>\n      <li parentName=\"ul\">{`Or set them to false if you don't want an animated transition (for some reason..)`}</li>\n    </ul>\n    <Playground __position={2} __code={'<Component\\n  initialState={{\\n    isOpen1: true,\\n    isOpen2: true,\\n    isOpen3: true,\\n  }}\\n>\\n  {({ setState, state }) => (\\n    <>\\n      <Alert\\n        color=\\\"error\\\"\\n        isOpen={state.isOpen1}\\n        onClose={() => setState({ isOpen1: false })}\\n      >\\n        This alert can be closed/controlled\\n      </Alert>\\n      <Alert\\n        color=\\\"error\\\"\\n        isOpen={state.isOpen3}\\n        onClose={() => setState({ isOpen3: false })}\\n      >\\n        This alert has a fade and collapse animation\\n      </Alert>\\n      <Alert\\n        color=\\\"error\\\"\\n        isOpen={state.isOpen2}\\n        onClose={() => setState({ isOpen2: false })}\\n        collapse={false}\\n      >\\n        This alert has a fade animation\\n      </Alert>\\n      <Button\\n        onClick={() =>\\n          setState({\\n            isOpen1: true,\\n            isOpen2: true,\\n            isOpen3: true,\\n          })\\n        }\\n      >\\n        Refresh\\n      </Button>\\n    </>\\n  )}\\n</Component>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Component,\n      Alert,\n      Button,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Component initialState={{\n        isOpen1: true,\n        isOpen2: true,\n        isOpen3: true\n      }} mdxType=\"Component\">\n    {({\n          setState,\n          state\n        }) => <>\n        <Alert color=\"error\" isOpen={state.isOpen1} onClose={() => setState({\n            isOpen1: false\n          })} mdxType=\"Alert\">\n          This alert can be closed/controlled\n        </Alert>\n        <Alert color=\"error\" isOpen={state.isOpen3} onClose={() => setState({\n            isOpen3: false\n          })} mdxType=\"Alert\">\n          This alert has a fade and collapse animation\n        </Alert>\n        <Alert color=\"error\" isOpen={state.isOpen2} onClose={() => setState({\n            isOpen2: false\n          })} collapse={false} mdxType=\"Alert\">\n          This alert has a fade animation\n        </Alert>\n        <Button onClick={() => setState({\n            isOpen1: true,\n            isOpen2: true,\n            isOpen3: true\n          })} mdxType=\"Button\">\n          Refresh\n        </Button>\n      </>}\n  </Component>\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}