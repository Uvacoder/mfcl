{"version":3,"sources":["webpack:///../src/documentation/components/Dropdown.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","of","Dropdown","__position","__code","__scope","Playground","Props","Component","Row","Button","initialState","value","setState","state","onChange","option","e","name","options","disabled","position","offset","btnType","size","isOpen","open","onClick","isMDXComponent"],"mappings":"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","file":"component---src-documentation-components-dropdown-mdx-db7ecb94d6e2b4bb4781.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/136467364/Desktop/work/mfcl/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport Component from 'react-component-component';\nimport { Row } from './helpers';\nimport { Dropdown, Button } from '../../lib';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"dropdown\"\n    }}>{`Dropdown`}</h1>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import { Dropdown } from 'mfcl'\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={Dropdown} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <Playground __position={1} __code={'<Component initialState={{ value: \\'1\\' }}>\\n  {({ setState, state }) => (\\n    <Row>\\n      <Dropdown\\n        onChange={(option, e) => setState({ value: option.name })}\\n        options={[\\n          { name: \\'1\\', value: \\'1\\' },\\n          { name: \\'2\\', value: \\'2\\' },\\n          { name: \\'3\\', value: \\'3\\' },\\n          { name: \\'4\\', value: \\'4\\' },\\n          { name: \\'5\\', value: \\'5\\', disabled: true },\\n          { name: \\'6\\', value: \\'6\\' },\\n        ]}\\n        value={state.value}\\n      />\\n    </Row>\\n  )}\\n</Component>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Component,\n      Row,\n      Dropdown,\n      Button,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Component initialState={{\n        value: '1'\n      }} mdxType=\"Component\">\n    {({\n          setState,\n          state\n        }) => <Row mdxType=\"Row\">\n        <Dropdown onChange={(option, e) => setState({\n            value: option.name\n          })} options={[{\n            name: '1',\n            value: '1'\n          }, {\n            name: '2',\n            value: '2'\n          }, {\n            name: '3',\n            value: '3'\n          }, {\n            name: '4',\n            value: '4'\n          }, {\n            name: '5',\n            value: '5',\n            disabled: true\n          }, {\n            name: '6',\n            value: '6'\n          }]} value={state.value} mdxType=\"Dropdown\" />\n      </Row>}\n  </Component>\n    </Playground>\n    <br></br>\n    <h2 {...{\n      \"id\": \"customizable-children\"\n    }}>{`Customizable Children`}</h2>\n    <Playground __position={3} __code={'<Component initialState={{ value: 0 }}>\\n  {({ setState, state }) => (\\n    <Row>\\n      <Dropdown\\n        onChange={(option, e) => setState({ value: option.name })}\\n        options={[\\n          { name: \\'Set as Preferred\\', value: 0, disabled: true },\\n          { name: \\'Remove\\', value: 1 },\\n          { name: \\'Settings\\', value: 2 },\\n        ]}\\n        position=\\\"bottom-left\\\"\\n        value={state.value}\\n        offset=\\\"40px\\\"\\n      >\\n        <Button btnType=\\\"primary\\\" size=\\\"lg\\\">\\n          ...\\n        </Button>\\n      </Dropdown>\\n    </Row>\\n  )}\\n</Component>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Component,\n      Row,\n      Dropdown,\n      Button,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Component initialState={{\n        value: 0\n      }} mdxType=\"Component\">\n    {({\n          setState,\n          state\n        }) => <Row mdxType=\"Row\">\n        <Dropdown onChange={(option, e) => setState({\n            value: option.name\n          })} options={[{\n            name: 'Set as Preferred',\n            value: 0,\n            disabled: true\n          }, {\n            name: 'Remove',\n            value: 1\n          }, {\n            name: 'Settings',\n            value: 2\n          }]} position=\"bottom-left\" value={state.value} offset=\"40px\" mdxType=\"Dropdown\">\n          <Button btnType=\"primary\" size=\"lg\" mdxType=\"Button\">\n            ...\n          </Button>\n        </Dropdown>\n      </Row>}\n  </Component>\n    </Playground>\n    <br></br>\n    <h2 {...{\n      \"id\": \"controlled-dropdown\"\n    }}>{`Controlled Dropdown`}</h2>\n    <Playground __position={5} __code={'<Component initialState={{ value: \\'ALL\\', isOpen: false }}>\\n  {({ setState, state }) => (\\n    <Row>\\n      <Dropdown\\n        open={state.isOpen}\\n        onChange={(option, e) => setState({ value: option.value })}\\n        options={[\\n          { name: \\'1\\', value: \\'1\\' },\\n          { name: \\'2\\', value: \\'2\\' },\\n          { name: \\'3\\', value: \\'3\\' },\\n          { name: \\'4\\', value: \\'4\\' },\\n          { name: \\'5\\', value: \\'5\\', disabled: true },\\n          { name: \\'6\\', value: \\'6\\' },\\n        ]}\\n        value={state.value}\\n      />\\n      <Button\\n        btnType=\\\"primary\\\"\\n        onClick={() => setState({ isOpen: !state.isOpen })}\\n        size=\\\"lg\\\"\\n      >\\n        {state.isOpen ? \\'Close\\' : \\'Open\\'} me\\n      </Button>\\n    </Row>\\n  )}\\n</Component>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Component,\n      Row,\n      Dropdown,\n      Button,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Component initialState={{\n        value: 'ALL',\n        isOpen: false\n      }} mdxType=\"Component\">\n    {({\n          setState,\n          state\n        }) => <Row mdxType=\"Row\">\n        <Dropdown open={state.isOpen} onChange={(option, e) => setState({\n            value: option.value\n          })} options={[{\n            name: '1',\n            value: '1'\n          }, {\n            name: '2',\n            value: '2'\n          }, {\n            name: '3',\n            value: '3'\n          }, {\n            name: '4',\n            value: '4'\n          }, {\n            name: '5',\n            value: '5',\n            disabled: true\n          }, {\n            name: '6',\n            value: '6'\n          }]} value={state.value} mdxType=\"Dropdown\" />\n        <Button btnType=\"primary\" onClick={() => setState({\n            isOpen: !state.isOpen\n          })} size=\"lg\" mdxType=\"Button\">\n          {state.isOpen ? 'Close' : 'Open'} me\n        </Button>\n      </Row>}\n  </Component>\n    </Playground>\n    <br></br>\n    <br></br>\n    <br></br>\n    <br></br>\n    <br></br>\n    <br></br>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}