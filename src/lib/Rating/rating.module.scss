@import '../variables';

/* Styles applied to the root element. */
.root {
  display: inline-flex;
  position: relative;
  font-size: 1.5rem;
  color: $gray-11;
  cursor: pointer;
  text-align: left;
  -webkit-tap-highlight-color: transparent;

  &.disabled {
    opacity: 0.5;
    pointer-events: none;
  }

  &.focusVisible {
    outline: 1px solid #999;
  }
}
/* Styles applied to the root element if `size="sm"`. */
.size-sm {
  font-size: 1.125rem;
}
/* Styles applied to the root element if `size="lg"`. */
.size-lg {
  font-size: 1.875rem;
}
/* Styles applied to the root element if `readOnly={true}`. */
.readOnly {
  pointer-events: none;
}
/* Visually hide an element. */
.visuallyHidden {
  top: 20px;
  clip: rect(0 0 0 0);
  color: #000;
  width: 1px;
  border: 0;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  position: absolute;
}
/* Styles applied to the pristine label. */
.pristine {
  input:focus + & {
    top: 0;
    bottom: 0;
    position: absolute;
    outline: 1px solid #999;
    width: 100%;
  }
}
/* Styles applied to the label elements. */
.label {
  cursor: inherit;
}
/* Styles applied to the icon wrapping elements. */
.icon {
  display: flex;
  transition: transform 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
  // Fix mouseLeave issue.
  // https://github.com/facebook/react/issues/4492
  pointer-events: none;
}
/* Styles applied to the icon wrapping elements when empty. */
.iconEmpty {
  color: #ececec;
}
/* Styles applied to the icon wrapping elements when active. */
.iconActive {
  transform: scale(1.2);
}
/* Styles applied to the icon wrapping elements when decimals are necessary. */
.decimal {
  position: relative;
}
